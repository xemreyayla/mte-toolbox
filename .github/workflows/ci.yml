name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*' # 'v' ile başlayan herhangi bir etiketi yakalar

  pull_request:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: # <-- Bu satır runs-on ile aynı hizada olmalı
      contents: write # Release oluşturmak için gerekli izin
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build Docker image and extract .deb package
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/mte-toolbox-builder:latest .
          docker create --name mte_temp_container ${{ secrets.DOCKER_USERNAME }}/mte-toolbox-builder:latest

          # .deb dosyasını container'dan CI/CD runner'ının çalışma dizinine kopyala
          # DİKKAT: Dockerfile'daki mv komutu paketi /app/ dizinine taşıdığı için yolu güncelledik.
          docker cp mte_temp_container:/app/mte-toolbox-1.0.4-Linux.deb .

          docker rm mte_temp_container
        working-directory: ${{ github.workspace }}

      - name: Log in to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push Docker image to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/')
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/mte-toolbox-builder:latest

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ github.workspace }}/mte-toolbox-1.0.4-Linux.deb
          generate_release_notes: true
