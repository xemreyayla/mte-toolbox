name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'

  pull_request:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # tag bilgilerini görebilmek için

      - name: Extract version from Git tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build Docker image and extract .deb package
        run: |
          docker build --build-arg VERSION=${{ env.VERSION }} -t ${{ secrets.DOCKER_USERNAME }}/mte-toolbox-builder:${{ env.VERSION }} .
          docker create --name mte_temp_container ${{ secrets.DOCKER_USERNAME }}/mte-toolbox-builder:${{ env.VERSION }}
          docker cp mte_temp_container:/app/*.deb .
          docker rm mte_temp_container
          DEB_FILE=$(ls *.deb | head -n1)
          echo "DEB_FILE=$DEB_FILE" >> $GITHUB_ENV

      - name: Upload .deb package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: mte-toolbox-deb-package
          path: ${{ env.DEB_FILE }}

      - name: Log in to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push Docker image to Docker Hub
        if: github.ref == 'refs/heads/main'
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/mte-toolbox-builder:${{ env.VERSION }}

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.DEB_FILE }}
          generate_release_notes: true
