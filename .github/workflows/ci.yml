name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*' # 'v' ile başlayan tagler

  pull_request:
    branches:
      - main
      - master

env:
  VERSION: ${{ github.ref_name }} # Tag veya branch ismi gelir, örn: v1.0.8 veya main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version from tag or fallback
        id: extract_version
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
          else
            echo "VERSION=latest" >> $GITHUB_ENV
          fi

      - name: Build Docker image and extract .deb package
        run: |
          docker build --build-arg VERSION=${{ env.VERSION }} -t ${{ secrets.DOCKER_USERNAME }}/mte-toolbox-builder:${{ env.VERSION }} .
          CONTAINER_ID=$(docker create ${{ secrets.DOCKER_USERNAME }}/mte-toolbox-builder:${{ env.VERSION }})
          docker start $CONTAINER_ID
          echo "Listing files in /app/build inside container:"
          docker exec $CONTAINER_ID ls -l /app/build/
          docker cp $CONTAINER_ID:/app/build/mte-toolbox-${{ env.VERSION }}-Linux.deb .
          docker rm $CONTAINER_ID
        working-directory: ${{ github.workspace }}

      - name: Upload .deb package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: mte-toolbox-deb-package
          path: mte-toolbox-${{ env.VERSION }}-Linux.deb

      - name: Log in to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push Docker image to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/')
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/mte-toolbox-builder:${{ env.VERSION }}

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: mte-toolbox-${{ env.VERSION }}-Linux.deb
          generate_release_notes: true
